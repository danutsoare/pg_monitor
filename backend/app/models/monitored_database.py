from sqlalchemy import Column, Integer, String, Boolean
from sqlalchemy.orm import relationship

# Import the common BaseClass
from app.db.base_class import BaseClass


class Connection(BaseClass):
    # __tablename__ = "monitored_databases" # Now generated by BaseClass
    # id = Column(Integer, primary_key=True, index=True) # Now defined in BaseClass

    name = Column(String, index=True, nullable=False)
    db_host = Column(String, nullable=False)
    db_port = Column(Integer, nullable=False, default=5432)
    db_name = Column(String, nullable=False)
    db_user = Column(String, nullable=False)
    db_password_encrypted = Column(String, nullable=False)  # Placeholder for encrypted password
    is_active = Column(Boolean, default=True)
    is_monitored = Column(Boolean, default=True)  # Control if snapshots are taken

    # Relationships
    snapshots = relationship("Snapshot", back_populates="database", cascade="all, delete-orphan") 