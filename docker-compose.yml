services:
  backend:
    build: ./backend
    container_name: postgres-monitor-backend-prod
    ports:
      - "8000:8000"
    # No code volume mount for production; code should be baked into the image
    environment:
      # These should be set via a secure .env file in the deployment environment
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      # Add required DB connection vars needed by the backend app
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      # Add any other production-specific environment variables here
    depends_on:
      - db
    restart: unless-stopped
    networks: # Assign backend to the custom network
      - monitor-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile # Assumes this Dockerfile builds production assets
    container_name: postgres-monitor-frontend-prod
    ports:
      - "8080:80" # Map host port 8080 to Nginx container port 80
    # No code or node_modules volume mounts for production
    # Remove development-specific environment variables like CHOKIDAR_USEPOLLING
    depends_on:
      - backend
    restart: unless-stopped
    networks: # Assign frontend to the custom network
      - monitor-net

  db:
    image: postgres:14 # Use a specific version
    container_name: postgres-monitor-db-prod
    ports:
      - "5432:5432" # Consider not exposing this publicly in a real prod environment
    environment:
      # These should be set via a secure .env file in the deployment environment
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data # Use a separate volume for prod data
    restart: unless-stopped
    networks: # Assign db to the custom network
      - monitor-net

volumes:
  postgres-data-prod: # Define the production data volume
    name: postgres-monitor-data-prod # Explicitly name the volume

# Define the custom network
networks:
  monitor-net:
    driver: bridge 